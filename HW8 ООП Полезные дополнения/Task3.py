"""3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо
только числами. Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
скрипта, введя, например, команду «stop». При этом скрипт завершается, сформированный список с числами выводится
на экран.
Подсказка: для этого задания примем, что пользователь может вводить только числа и строки. Во время ввода пользователем
очередного элемента необходимо реализовать проверку типа элемента. Вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение. При
этом работа скрипта не должна завершаться. """


class ListValueError(ValueError):
    def __str__(self):
        return 'The value isn\'t the number'


my_list = []
while True:
    try:
        a = input('Type the number: ')
        if not a.replace('-', '').isdigit():
            raise ListValueError
        my_list.append(int(a))
    except ListValueError as err:
        print(err)
    except BaseException:
        print(f'\n{" ".join(map(str, my_list))}')
        break
    else:
        print('The numer is added')
